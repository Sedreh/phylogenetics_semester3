#NEXUS
[R-package APE, Tue Oct 22 18:45:16 2019]

BEGIN TAXA;
	DIMENSIONS NTAX = 10;
	TAXLABELS
		SUP35_Agos_ATCC_10895_NM_211584
		SUP35_Skud_IFO1802T_36
		SUP35_Seub_CBS12357_chr_II_IV_DF968535
		SUP35_Sarb_H-6_chrXIII_CM001575
		SUP35_Spar_A12_Liti
		SUP35_Scer_beer078_CM005938
		SUP35_Sbou_unique28_CM003560
		SUP35_Scer_74-D694_GCA_001578265.1
		SUP35_Smik_IFO1815T_30
		SUP35_Kla_AB039749
	;
END;
BEGIN TREES;
	TRANSLATE
		1	SUP35_Agos_ATCC_10895_NM_211584,
		2	SUP35_Skud_IFO1802T_36,
		3	SUP35_Seub_CBS12357_chr_II_IV_DF968535,
		4	SUP35_Sarb_H-6_chrXIII_CM001575,
		5	SUP35_Spar_A12_Liti,
		6	SUP35_Scer_beer078_CM005938,
		7	SUP35_Sbou_unique28_CM003560,
		8	SUP35_Scer_74-D694_GCA_001578265.1,
		9	SUP35_Smik_IFO1815T_30,
		10	SUP35_Kla_AB039749
	;
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] (((5,(6,(8,7))),((2,(3,4)),9)),1,10);
	TREE * UNTITLED = [&U] ((3,(2,(4,(9,(5,(6,(7,8))))))),1,10);
	TREE * UNTITLED = [&U] (1,((4,(2,(9,(5,(7,(6,8)))))),3),10);
	TREE * UNTITLED = [&U] ((((5,((8,6),7)),9),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] (((2,(9,((7,(6,8)),5))),(4,3)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(((5,(7,(6,8))),9),2))),1,10);
	TREE * UNTITLED = [&U] (1,(9,((((7,8),6),5),(4,(3,2)))),10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(9,(5,(6,(7,8))))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((((8,7),6),5),9)))),1,10);
	TREE * UNTITLED = [&U] (1,(((5,(6,(7,8))),9),((2,3),4)),10);
	TREE * UNTITLED = [&U] ((3,((2,((((8,6),7),5),9)),4)),1,10);
	TREE * UNTITLED = [&U] (1,(2,((3,4),(9,(((7,8),6),5)))),10);
	TREE * UNTITLED = [&U] (1,(((5,(6,(7,8))),9),(4,(3,2))),10);
	TREE * UNTITLED = [&U] ((((9,(5,(7,(8,6)))),2),(3,4)),1,10);
	TREE * UNTITLED = [&U] ((3,((4,(9,(5,(6,(7,8))))),2)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((((6,(7,8)),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,(9,(((4,3),2),(5,(6,(8,7))))),10);
	TREE * UNTITLED = [&U] (((4,(2,((((7,8),6),5),9))),3),1,10);
	TREE * UNTITLED = [&U] (1,((4,(2,3)),((((7,8),6),5),9)),10);
	TREE * UNTITLED = [&U] (1,((9,((6,(7,8)),5)),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,(9,((5,(6,(8,7))),((3,4),2))),10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),(9,(5,(6,(8,7))))),10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),(9,(5,(6,(7,8))))),10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),(9,((8,(6,7)),5))),10);
	TREE * UNTITLED = [&U] ((2,((4,3),(9,(5,(8,(6,7)))))),1,10);
	TREE * UNTITLED = [&U] ((3,(2,(((5,(7,(8,6))),9),4))),1,10);
	TREE * UNTITLED = [&U] ((9,((5,(6,(7,8))),((3,2),4))),1,10);
	TREE * UNTITLED = [&U] (1,((((((8,7),6),5),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),((5,(6,(7,8))),9))),10);
	TREE * UNTITLED = [&U] ((3,(2,(((5,(7,(6,8))),9),4))),1,10);
	TREE * UNTITLED = [&U] (((4,3),(2,(((6,(8,7)),5),9))),1,10);
	TREE * UNTITLED = [&U] (1,(((9,(5,(7,(6,8)))),2),(4,3)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(((8,6),7),5)),2))),10);
	TREE * UNTITLED = [&U] ((((9,(5,(8,(6,7)))),2),(4,3)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(7,(8,6))))))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,((8,7),6)))))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((4,(9,(5,(8,(7,6))))),2)),10);
	TREE * UNTITLED = [&U] (1,((((5,((8,7),6)),9),2),(4,3)),10);
	TREE * UNTITLED = [&U] ((((3,4),((((7,8),6),5),9)),2),1,10);
	TREE * UNTITLED = [&U] (1,(((3,4),(9,(5,(6,(7,8))))),2),10);
	TREE * UNTITLED = [&U] (1,(4,(3,(2,((((7,6),8),5),9)))),10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),(9,((6,(8,7)),5))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(8,(7,6)))),2))),10);
	TREE * UNTITLED = [&U] (1,(((4,3),2),((((7,8),6),5),9)),10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),(((6,(8,7)),5),9))),10);
	TREE * UNTITLED = [&U] ((((4,3),2),((5,((8,7),6)),9)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(4,3)),((5,((8,7),6)),9)),10);
	TREE * UNTITLED = [&U] ((((((5,((8,6),7)),9),4),2),3),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,((((8,7),6),5),9)),4)),10);
	TREE * UNTITLED = [&U] (1,(3,((2,((((8,7),6),5),9)),4)),10);
	TREE * UNTITLED = [&U] (1,((4,(2,(9,((8,(7,6)),5)))),3),10);
	TREE * UNTITLED = [&U] (1,(9,((2,(3,4)),(5,((7,8),6)))),10);
	TREE * UNTITLED = [&U] ((2,(3,(4,((5,(6,(7,8))),9)))),1,10);
	TREE * UNTITLED = [&U] ((3,((((5,((7,6),8)),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((9,((8,(6,7)),5)),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(8,(6,7))))))),10);
	TREE * UNTITLED = [&U] (1,(9,((5,(7,(6,8))),(2,(4,3)))),10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(9,((6,(7,8)),5))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(6,(8,7))))))),1,10);
	TREE * UNTITLED = [&U] ((3,((2,(9,(5,(6,(7,8))))),4)),1,10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(9,(5,(6,(8,7))))),(3,4)),10);
	TREE * UNTITLED = [&U] (((3,4),(2,(9,(5,(7,(8,6)))))),1,10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(9,((8,(7,6)),5))),1,10);
	TREE * UNTITLED = [&U] ((3,(((9,(5,(7,(6,8)))),2),4)),1,10);
	TREE * UNTITLED = [&U] ((9,((5,(6,(8,7))),((3,4),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,((6,(8,7)),5))))),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,((7,8),6))),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(7,(6,8)))),2))),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(6,(7,8))))))),1,10);
	TREE * UNTITLED = [&U] (1,((2,((5,((8,7),6)),9)),(4,3)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(6,(8,7)))),2))),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((5,(6,(8,7))),9)),10);
	TREE * UNTITLED = [&U] (((4,(3,2)),(9,(5,(6,(8,7))))),1,10);
	TREE * UNTITLED = [&U] ((((5,(6,(8,7))),9),((4,3),2)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,(6,(7,8)))),2))),1,10);
	TREE * UNTITLED = [&U] (((2,(((((6,8),7),5),9),4)),3),1,10);
	TREE * UNTITLED = [&U] (1,((((((8,7),6),5),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] ((((5,(6,(7,8))),9),((3,4),2)),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,(5,(8,(7,6))))),1,10);
	TREE * UNTITLED = [&U] (1,((9,(5,(7,(6,8)))),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,(((4,3),(9,(5,(7,(8,6))))),2),10);
	TREE * UNTITLED = [&U] (1,(2,((3,4),(9,((6,(8,7)),5)))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((((7,8),6),5),9),2))),10);
	TREE * UNTITLED = [&U] (((9,(5,(8,(6,7)))),((3,4),2)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(((7,8),6),5)),2))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(((5,(7,(8,6))),9),2))),1,10);
	TREE * UNTITLED = [&U] (((4,(2,3)),((5,(6,(7,8))),9)),1,10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),(9,(5,(8,(7,6))))),10);
	TREE * UNTITLED = [&U] (1,(9,((5,(7,(6,8))),((3,4),2))),10);
	TREE * UNTITLED = [&U] ((3,((2,(9,(((6,7),8),5))),4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,((((7,8),6),5),9)),4)),10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),4),2)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((((8,7),6),5),9)))),1,10);
	TREE * UNTITLED = [&U] (((3,4),((9,((6,(7,8)),5)),2)),1,10);
	TREE * UNTITLED = [&U] ((((((7,(8,6)),5),9),2),(4,3)),1,10);
	TREE * UNTITLED = [&U] ((((5,(8,(6,7))),9),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] (1,(9,((5,(7,(8,6))),((3,4),2))),10);
	TREE * UNTITLED = [&U] ((3,(4,((2,9),((8,(7,6)),5)))),1,10);
	TREE * UNTITLED = [&U] (((2,(9,((6,(8,7)),5))),(3,4)),1,10);
	TREE * UNTITLED = [&U] (((2,((5,(6,(7,8))),9)),(3,4)),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(((6,(7,8)),5),9)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(4,(9,(5,(6,(8,7)))))),3),10);
	TREE * UNTITLED = [&U] (1,((4,(2,(((6,(7,8)),5),9))),3),10);
	TREE * UNTITLED = [&U] (1,(((4,3),2),(9,((6,(7,8)),5))),10);
	TREE * UNTITLED = [&U] ((2,((((6,(7,8)),5),9),(3,4))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((((6,7),8),5),9)))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(6,(7,8))))))),1,10);
	TREE * UNTITLED = [&U] (1,(((5,(8,(6,7))),9),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(8,7)))),((2,3),4)),10);
	TREE * UNTITLED = [&U] (1,((2,(9,((6,(7,8)),5))),(4,3)),10);
	TREE * UNTITLED = [&U] (((4,((9,(5,(8,(7,6)))),2)),3),1,10);
	TREE * UNTITLED = [&U] (((4,3),((9,((6,(7,8)),5)),2)),1,10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),(9,(5,(6,(7,8))))),10);
	TREE * UNTITLED = [&U] ((3,(((9,(5,(7,(8,6)))),2),4)),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(((6,(8,7)),5),9)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((((6,(7,8)),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,((4,3),(2,(9,(5,(8,(6,7)))))),10);
	TREE * UNTITLED = [&U] ((9,(((6,(8,7)),5),(2,(3,4)))),1,10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(8,7)))),((3,2),4)),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((((8,7),6),5),9)),10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(7,8)))),(2,(3,4))),10);
	TREE * UNTITLED = [&U] (1,(2,((3,4),(9,((6,(7,8)),5)))),10);
	TREE * UNTITLED = [&U] (1,(2,((9,(5,((7,8),6))),(3,4))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,((7,8),6))),2))),10);
	TREE * UNTITLED = [&U] (1,(9,(((7,(6,8)),5),(2,(4,3)))),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(6,(7,8))))))),1,10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] (1,(((3,2),4),(9,((6,(7,8)),5))),10);
	TREE * UNTITLED = [&U] (((4,(2,3)),(9,(5,(7,(6,8))))),1,10);
	TREE * UNTITLED = [&U] (1,((9,((6,(7,8)),5)),((2,3),4)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(6,(8,7)))),2))),10);
	TREE * UNTITLED = [&U] ((((2,(9,(5,(6,(7,8))))),4),3),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,((7,(8,6)),5)),2))),10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(7,8)))),(2,(4,3))),10);
	TREE * UNTITLED = [&U] ((3,(4,(((((8,7),6),5),9),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((((8,(7,6)),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(7,(8,6))))))),10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(8,7)))),((3,4),2)),10);
	TREE * UNTITLED = [&U] ((3,(4,(((((6,8),7),5),9),2))),1,10);
	TREE * UNTITLED = [&U] ((((((7,8),6),5),9),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] (((9,(5,(8,(6,7)))),((3,4),2)),1,10);
	TREE * UNTITLED = [&U] ((3,((2,((((8,7),6),5),9)),4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,((5,(6,(7,8))),9)))),10);
	TREE * UNTITLED = [&U] ((3,(((9,(5,(7,(8,6)))),2),4)),1,10);
	TREE * UNTITLED = [&U] ((3,(((9,(((7,8),6),5)),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,((5,(7,(6,8))),9)),(3,4)),10);
	TREE * UNTITLED = [&U] ((((2,(4,3)),(((7,8),6),5)),9),1,10);
	TREE * UNTITLED = [&U] (((4,3),(((5,(8,(7,6))),9),2)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(6,(8,7))))))),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,(6,(8,7)))),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,((5,(6,(7,8))),9)))),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((((7,8),6),5),9)),10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,((6,(7,8)),5))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(2,(4,(9,(5,(8,(7,6))))))),10);
	TREE * UNTITLED = [&U] ((3,(((2,9),(((7,6),8),5)),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),(9,(5,((7,8),6)))),10);
	TREE * UNTITLED = [&U] (1,((9,((6,(8,7)),5)),((3,4),2)),10);
	TREE * UNTITLED = [&U] ((3,(4,(((((8,6),7),5),9),2))),1,10);
	TREE * UNTITLED = [&U] (1,((2,(9,(5,(6,(7,8))))),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(3,(2,((9,(5,(7,(8,6)))),4))),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,((8,(6,7)),5)),2))),1,10);
	TREE * UNTITLED = [&U] ((3,((2,(9,((6,(7,8)),5))),4)),1,10);
	TREE * UNTITLED = [&U] (((((6,(7,8)),5),9),((3,4),2)),1,10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),(9,(5,(8,(6,7)))))),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((5,((7,8),6)),9)))),1,10);
	TREE * UNTITLED = [&U] (1,(((((8,6),7),5),9),(2,(3,4))),10);
	TREE * UNTITLED = [&U] (1,((2,((9,(5,((8,7),6))),4)),3),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((5,(6,(7,8))),9),2))),10);
	TREE * UNTITLED = [&U] (1,(((((7,(8,6)),5),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(7,(6,8))))))),10);
	TREE * UNTITLED = [&U] (1,(9,(2,((3,4),((6,(8,7)),5)))),10);
	TREE * UNTITLED = [&U] ((2,((3,4),(9,(5,(7,(6,8)))))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(((9,((8,(7,6)),5)),4),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,((7,(8,6)),5)),2))),10);
	TREE * UNTITLED = [&U] (1,((((9,(((7,6),8),5)),2),4),3),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(((8,7),6),5)),2))),10);
	TREE * UNTITLED = [&U] (((3,4),((9,(5,(6,(8,7)))),2)),1,10);
	TREE * UNTITLED = [&U] ((((5,(6,(7,8))),9),((3,4),2)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(2,(4,(9,(5,(6,(8,7))))))),10);
	TREE * UNTITLED = [&U] ((((4,3),((5,(6,(7,8))),9)),2),1,10);
	TREE * UNTITLED = [&U] (1,((2,(4,3)),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] ((9,((4,(2,3)),(5,(6,(8,7))))),1,10);
	TREE * UNTITLED = [&U] (((5,(6,(8,7))),((4,(2,3)),9)),1,10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),(9,(5,(6,(7,8))))),10);
	TREE * UNTITLED = [&U] ((((8,(7,6)),5),((2,(3,4)),9)),1,10);
	TREE * UNTITLED = [&U] (((4,(2,(9,(5,(8,(7,6)))))),3),1,10);
	TREE * UNTITLED = [&U] ((9,((2,(4,3)),(5,(6,(7,8))))),1,10);
	TREE * UNTITLED = [&U] (((((9,((7,(8,6)),5)),4),2),3),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(7,(8,6))))))),10);
	TREE * UNTITLED = [&U] (1,(3,((((((6,8),7),5),9),2),4)),10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,(5,((7,8),6)))),1,10);
	TREE * UNTITLED = [&U] (((9,(((6,8),7),5)),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] ((3,((2,((((7,8),6),5),9)),4)),1,10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),((((6,7),8),5),9))),10);
	TREE * UNTITLED = [&U] ((3,((((5,((7,8),6)),9),2),4)),1,10);
	TREE * UNTITLED = [&U] ((((6,(8,7)),5),((2,(4,3)),9)),1,10);
	TREE * UNTITLED = [&U] (((2,(((((7,6),8),5),9),4)),3),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,((5,(8,(6,7))),9)))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,((6,(8,7)),5))))),10);
	TREE * UNTITLED = [&U] (1,(9,(2,((3,4),(5,(6,(8,7)))))),10);
	TREE * UNTITLED = [&U] (1,((2,(9,(5,(7,(8,6))))),(3,4)),10);
	TREE * UNTITLED = [&U] ((3,((((5,((6,8),7)),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,((5,((8,6),7)),9)),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(3,(2,(4,(9,(5,(8,(7,6))))))),10);
	TREE * UNTITLED = [&U] (1,(((4,3),2),(9,(((7,8),6),5))),10);
	TREE * UNTITLED = [&U] ((((4,3),2),(((6,(7,8)),5),9)),1,10);
	TREE * UNTITLED = [&U] (1,(((4,3),(9,(5,(6,(8,7))))),2),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(6,(8,7))))))),10);
	TREE * UNTITLED = [&U] ((3,(2,((9,(5,(6,(7,8)))),4))),1,10);
	TREE * UNTITLED = [&U] (((2,((((8,7),6),5),9)),(3,4)),1,10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),(9,(5,((8,7),6))))),10);
	TREE * UNTITLED = [&U] (((9,((6,(7,8)),5)),((4,3),2)),1,10);
	TREE * UNTITLED = [&U] (((4,(2,(9,(5,(7,(6,8)))))),3),1,10);
	TREE * UNTITLED = [&U] (1,((((5,(6,(8,7))),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(9,(((6,(8,7)),5),(2,(4,3)))),10);
	TREE * UNTITLED = [&U] (1,(((5,(6,(7,8))),(2,(3,4))),9),10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),(((6,(7,8)),5),9)),10);
	TREE * UNTITLED = [&U] (((((6,(7,8)),5),(2,(3,4))),9),1,10);
	TREE * UNTITLED = [&U] ((3,(2,(4,(9,(5,(6,(7,8))))))),1,10);
	TREE * UNTITLED = [&U] (1,((4,(2,3)),(9,(((8,7),6),5))),10);
	TREE * UNTITLED = [&U] (1,((((((7,8),6),5),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] (((9,(5,(6,(8,7)))),(4,(2,3))),1,10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),(9,(5,(7,(6,8))))),10);
	TREE * UNTITLED = [&U] (((3,4),((9,(5,(6,(7,8)))),2)),1,10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] (1,(3,(((9,(5,(6,(8,7)))),4),2)),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,((7,8),6))),2))),1,10);
	TREE * UNTITLED = [&U] (((((7,(8,6)),5),9),((3,2),4)),1,10);
	TREE * UNTITLED = [&U] (((4,(((((7,6),8),5),9),2)),3),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,(9,(5,((8,7),6)))),4)),10);
	TREE * UNTITLED = [&U] (1,(3,((4,((5,(6,(8,7))),9)),2)),10);
	TREE * UNTITLED = [&U] ((9,((2,(3,4)),(5,(6,(7,8))))),1,10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),(9,(5,(8,(7,6))))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(((7,(8,6)),5),9)))),10);
	TREE * UNTITLED = [&U] (1,((2,(4,3)),((5,((7,8),6)),9)),10);
	TREE * UNTITLED = [&U] ((((5,(7,(8,6))),9),((4,3),2)),1,10);
	TREE * UNTITLED = [&U] (1,(9,((2,(3,4)),(5,((8,7),6)))),10);
	TREE * UNTITLED = [&U] ((((5,((8,7),6)),(2,(4,3))),9),1,10);
	TREE * UNTITLED = [&U] (1,((4,(2,((5,(8,(7,6))),9))),3),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),(9,(5,(6,(7,8))))),10);
	TREE * UNTITLED = [&U] ((3,((2,(9,(5,(8,(6,7))))),4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,((6,(8,7)),5)),2))),10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(((6,(8,7)),5),9)),1,10);
	TREE * UNTITLED = [&U] (1,((9,((6,(7,8)),5)),((3,4),2)),10);
	TREE * UNTITLED = [&U] (((2,(9,((8,(6,7)),5))),(3,4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((((7,8),6),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),(((6,(7,8)),5),9)),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(((7,8),6),5))))),1,10);
	TREE * UNTITLED = [&U] ((((((6,7),8),5),9),((3,2),4)),1,10);
	TREE * UNTITLED = [&U] ((3,((((((6,7),8),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,(5,(6,(7,8))))),1,10);
	TREE * UNTITLED = [&U] ((((4,3),2),(9,(5,(6,(8,7))))),1,10);
	TREE * UNTITLED = [&U] (1,((9,((6,(7,8)),5)),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,((4,3),(2,(((6,(8,7)),5),9))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(8,(6,7)))),2))),10);
	TREE * UNTITLED = [&U] ((3,((((((6,7),8),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,(7,(6,8)))),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(2,(4,(9,(5,(6,(8,7))))))),10);
	TREE * UNTITLED = [&U] (((((6,(7,8)),5),9),(4,(2,3))),1,10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(((6,(8,7)),5),9)),1,10);
	TREE * UNTITLED = [&U] (1,(((9,(5,(8,(6,7)))),2),(4,3)),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,(7,(6,8)))),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(8,(6,7))))))),10);
	TREE * UNTITLED = [&U] ((3,((2,(9,(5,(6,(8,7))))),4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,((((5,(7,(6,8))),9),4),2)),10);
	TREE * UNTITLED = [&U] ((4,((2,(9,(5,(6,(8,7))))),3)),1,10);
	TREE * UNTITLED = [&U] ((9,((5,(6,(8,7))),((3,4),2))),1,10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((((8,7),6),5),9)),10);
	TREE * UNTITLED = [&U] (((9,(5,(8,(6,7)))),(4,(2,3))),1,10);
	TREE * UNTITLED = [&U] (1,((3,4),(2,(9,((7,(6,8)),5)))),10);
	TREE * UNTITLED = [&U] (1,((2,((((7,8),6),5),9)),(3,4)),10);
	TREE * UNTITLED = [&U] (((2,(9,(5,((8,7),6)))),(4,3)),1,10);
	TREE * UNTITLED = [&U] (1,(9,((5,(6,(7,8))),((3,2),4))),10);
	TREE * UNTITLED = [&U] (1,(((5,(6,(7,8))),((3,4),2)),9),10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(9,((6,(7,8)),5))),1,10);
	TREE * UNTITLED = [&U] ((3,(2,(4,(9,(5,(6,(8,7))))))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(((((7,8),6),5),9),2))),1,10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(7,8)))),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((5,(6,(8,7))),9)),10);
	TREE * UNTITLED = [&U] (((((5,((8,7),6)),9),2),(4,3)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((5,(8,(6,7))),9)))),1,10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(4,3)),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] (((((6,(7,8)),5),9),(4,(3,2))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((5,(8,(7,6))),9)))),1,10);
	TREE * UNTITLED = [&U] (1,((2,(9,(5,(7,(8,6))))),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(((5,(6,(7,8))),9),((3,2),4)),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,((8,(7,6)),5)),2))),1,10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),(9,(5,((7,8),6)))),10);
	TREE * UNTITLED = [&U] ((3,((((((7,8),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] ((3,(2,(((((6,8),7),5),9),4))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((((((8,7),6),5),9),4),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(2,(((5,(6,(7,8))),9),4))),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,((5,(7,(6,8))),9)))),1,10);
	TREE * UNTITLED = [&U] ((9,((5,((8,7),6)),((3,4),2))),1,10);
	TREE * UNTITLED = [&U] (((3,4),(((5,((8,7),6)),9),2)),1,10);
	TREE * UNTITLED = [&U] (1,(9,(2,((5,(6,(8,7))),(3,4)))),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((5,((8,6),7)),9)),10);
	TREE * UNTITLED = [&U] ((9,((2,(4,3)),((6,(8,7)),5))),1,10);
	TREE * UNTITLED = [&U] (1,((4,((9,((6,(8,7)),5)),2)),3),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(((8,7),6),5)),2))),1,10);
	TREE * UNTITLED = [&U] ((((5,((7,8),6)),9),(4,(2,3))),1,10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),(((6,(8,7)),5),9)),10);
	TREE * UNTITLED = [&U] (1,((9,(5,((7,8),6))),(2,(4,3))),10);
	TREE * UNTITLED = [&U] (1,((((9,(((8,6),7),5)),4),2),3),10);
	TREE * UNTITLED = [&U] ((((2,3),4),((5,(8,(7,6))),9)),1,10);
	TREE * UNTITLED = [&U] (1,((4,(2,3)),((5,(8,(6,7))),9)),10);
	TREE * UNTITLED = [&U] ((3,((4,(9,((6,(8,7)),5))),2)),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,((((8,7),6),5),9)),4)),10);
	TREE * UNTITLED = [&U] (1,(((5,(8,(6,7))),9),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(8,(6,7))))))),10);
	TREE * UNTITLED = [&U] ((3,((((((8,6),7),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,(((((7,8),6),5),9),(2,(4,3))),10);
	TREE * UNTITLED = [&U] (1,(((3,2),4),(9,((6,(8,7)),5))),10);
	TREE * UNTITLED = [&U] ((2,((((8,(7,6)),5),9),(3,4))),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),((5,((7,8),6)),9)),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,(9,((8,(7,6)),5))),4)),10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),(9,(5,(6,(7,8)))))),10);
	TREE * UNTITLED = [&U] (1,(3,((2,(((6,(8,7)),5),9)),4)),10);
	TREE * UNTITLED = [&U] ((3,((2,((((8,7),6),5),9)),4)),1,10);
	TREE * UNTITLED = [&U] (1,((4,(2,3)),(9,(((7,8),6),5))),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(((6,(8,7)),5),9)))),1,10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,(9,((8,(7,6)),5))),4)),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(6,(7,8))))))),1,10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(8,7)))),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((5,(8,(7,6))),9),2))),10);
	TREE * UNTITLED = [&U] (1,(3,((2,((((6,7),8),5),9)),4)),10);
	TREE * UNTITLED = [&U] (1,((4,3),(2,((5,((7,8),6)),9))),10);
	TREE * UNTITLED = [&U] (((3,4),(2,(9,((8,(7,6)),5)))),1,10);
	TREE * UNTITLED = [&U] (((((5,(6,(7,8))),9),2),(4,3)),1,10);
	TREE * UNTITLED = [&U] (((4,(2,(9,((6,(7,8)),5)))),3),1,10);
	TREE * UNTITLED = [&U] (((4,(((5,(6,(7,8))),9),2)),3),1,10);
	TREE * UNTITLED = [&U] (1,(((3,2),4),(9,(5,(6,(8,7))))),10);
	TREE * UNTITLED = [&U] ((9,((5,(6,(8,7))),(2,(3,4)))),1,10);
	TREE * UNTITLED = [&U] (1,((9,((6,(8,7)),5)),(4,(3,2))),10);
	TREE * UNTITLED = [&U] (1,(((5,(6,(8,7))),9),((4,3),2)),10);
	TREE * UNTITLED = [&U] ((((4,3),2),(9,(5,(6,(8,7))))),1,10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(7,8)))),(4,(2,3))),10);
	TREE * UNTITLED = [&U] (((9,(5,(6,(8,7)))),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] (((9,(((8,7),6),5)),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] (1,(9,(((6,(8,7)),5),((3,4),2))),10);
	TREE * UNTITLED = [&U] ((((2,3),4),(9,(((8,7),6),5))),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,(5,(6,(8,7))))),1,10);
	TREE * UNTITLED = [&U] ((9,((((7,8),6),5),(2,(4,3)))),1,10);
	TREE * UNTITLED = [&U] (1,((((5,(6,(8,7))),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(((3,4),2),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] (1,(3,((4,(9,(5,(7,(6,8))))),2)),10);
	TREE * UNTITLED = [&U] (1,((3,4),(2,((((7,8),6),5),9))),10);
	TREE * UNTITLED = [&U] (((9,(5,(6,(8,7)))),(2,(4,3))),1,10);
	TREE * UNTITLED = [&U] (((2,(4,3)),((5,(6,(7,8))),9)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(((9,(((7,8),6),5)),4),2)),10);
	TREE * UNTITLED = [&U] (1,((2,((((8,7),6),5),(4,3))),9),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(8,(6,7))))))),1,10);
	TREE * UNTITLED = [&U] (((2,(9,(5,(6,(7,8))))),(4,3)),1,10);
	TREE * UNTITLED = [&U] (1,(((2,(9,((6,(8,7)),5))),4),3),10);
	TREE * UNTITLED = [&U] (((9,(((7,8),6),5)),(4,(3,2))),1,10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(9,(5,(8,(7,6))))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((2,(9,(5,(8,(7,6))))),4)),10);
	TREE * UNTITLED = [&U] ((((3,2),4),(9,((8,(6,7)),5))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(((9,(((8,7),6),5)),2),4)),10);
	TREE * UNTITLED = [&U] (1,((4,3),((((8,(7,6)),5),9),2)),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),(9,(((7,8),6),5))),10);
	TREE * UNTITLED = [&U] (1,(9,((2,(4,3)),(((6,7),8),5))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(6,(7,8)))),2))),10);
	TREE * UNTITLED = [&U] (1,(((3,2),4),(9,(5,((8,7),6)))),10);
	TREE * UNTITLED = [&U] ((((2,((((8,7),6),5),9)),4),3),1,10);
	TREE * UNTITLED = [&U] (1,(((((5,(7,(8,6))),9),2),4),3),10);
	TREE * UNTITLED = [&U] ((3,((((5,((7,8),6)),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((((8,7),6),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(6,(8,7))))))),10);
	TREE * UNTITLED = [&U] ((3,(2,(((((6,8),7),5),9),4))),1,10);
	TREE * UNTITLED = [&U] (((4,(3,2)),((5,(7,(6,8))),9)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(2,(((5,(7,(6,8))),9),4))),10);
	TREE * UNTITLED = [&U] ((3,((2,(9,((8,(6,7)),5))),4)),1,10);
	TREE * UNTITLED = [&U] (((9,(5,((8,6),7))),((3,2),4)),1,10);
	TREE * UNTITLED = [&U] (((4,(2,(9,((7,(6,8)),5)))),3),1,10);
	TREE * UNTITLED = [&U] (1,((9,(5,(8,(6,7)))),((3,4),2)),10);
	TREE * UNTITLED = [&U] ((3,(((((6,(8,7)),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),(9,((8,(6,7)),5))),10);
	TREE * UNTITLED = [&U] (1,(((2,((((6,7),8),5),9)),4),3),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,((8,7),6)))))),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((5,(6,(7,8))),9)),10);
	TREE * UNTITLED = [&U] ((((5,((8,7),6)),9),(2,(4,3))),1,10);
	TREE * UNTITLED = [&U] (1,(9,(((3,4),2),(5,(6,(7,8))))),10);
	TREE * UNTITLED = [&U] (((2,(9,((6,(8,7)),5))),(3,4)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(8,(6,7))))))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((((5,(6,(7,8))),9),2),4)),10);
	TREE * UNTITLED = [&U] (1,((9,(5,((7,8),6))),(2,(4,3))),10);
	TREE * UNTITLED = [&U] ((((4,((((7,6),8),5),9)),2),3),1,10);
	TREE * UNTITLED = [&U] (((9,(5,(6,(7,8)))),((3,2),4)),1,10);
	TREE * UNTITLED = [&U] (1,(((2,3),4),((5,((8,7),6)),9)),10);
	TREE * UNTITLED = [&U] (1,((3,4),((9,(((7,8),6),5)),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(2,((9,(5,(6,(8,7)))),4))),10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,(7,(8,6)))),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((4,(9,(5,((8,7),6)))),2)),10);
	TREE * UNTITLED = [&U] (1,((4,(2,3)),(9,(((7,8),6),5))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(7,(8,6))))))),10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),4),2)),1,10);
	TREE * UNTITLED = [&U] (((4,(((((7,8),6),5),9),2)),3),1,10);
	TREE * UNTITLED = [&U] (((9,(5,(6,(8,7)))),(2,(3,4))),1,10);
	TREE * UNTITLED = [&U] ((3,(((9,(5,(6,(8,7)))),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,((3,4),((9,(5,(7,(8,6)))),2)),10);
	TREE * UNTITLED = [&U] (1,((4,(2,(9,((6,(8,7)),5)))),3),10);
	TREE * UNTITLED = [&U] (1,((2,((9,(5,(7,(8,6)))),4)),3),10);
	TREE * UNTITLED = [&U] (1,(3,(((9,(5,((8,7),6))),2),4)),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(6,(7,8))))))),10);
	TREE * UNTITLED = [&U] (1,((4,3),(2,((((7,8),6),5),9))),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,((6,(8,7)),5))))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((((((7,8),6),5),9),2),4)),10);
	TREE * UNTITLED = [&U] (1,((((4,3),2),(5,(6,(7,8)))),9),10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(6,(7,8)))),2))),10);
	TREE * UNTITLED = [&U] (1,(2,((9,(5,(6,(7,8)))),(4,3))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,((((7,8),6),5),9)))),10);
	TREE * UNTITLED = [&U] (1,(3,((2,(9,(5,(6,(8,7))))),4)),10);
	TREE * UNTITLED = [&U] ((3,(((9,(((8,7),6),5)),2),4)),1,10);
	TREE * UNTITLED = [&U] (((2,(4,3)),((5,(6,(7,8))),9)),1,10);
	TREE * UNTITLED = [&U] (1,(((4,3),2),(9,((6,(8,7)),5))),10);
	TREE * UNTITLED = [&U] ((3,(4,(((5,(6,(7,8))),9),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(6,(7,8))))))),10);
	TREE * UNTITLED = [&U] ((9,((5,(6,(7,8))),((3,4),2))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,(2,(9,(5,(6,(8,7))))))),10);
	TREE * UNTITLED = [&U] ((((5,(6,(7,8))),(2,(3,4))),9),1,10);
	TREE * UNTITLED = [&U] ((3,(2,((9,(5,(6,(7,8)))),4))),1,10);
	TREE * UNTITLED = [&U] (1,(3,((((5,((8,7),6)),9),4),2)),10);
	TREE * UNTITLED = [&U] (1,(3,(2,(4,(9,((8,(7,6)),5))))),10);
	TREE * UNTITLED = [&U] (1,((4,(2,3)),(9,(5,((8,7),6)))),10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((5,(8,(7,6))),9)),10);
	TREE * UNTITLED = [&U] ((3,((((5,(6,(8,7))),9),4),2)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(9,((7,(8,6)),5))),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(9,((5,(6,(8,7))),((4,3),2))),10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),(9,(5,((8,7),6)))),10);
	TREE * UNTITLED = [&U] ((((4,3),2),(9,(((7,8),6),5))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(6,(7,8)))),2))),10);
	TREE * UNTITLED = [&U] (1,(3,((4,(9,((7,(8,6)),5))),2)),10);
	TREE * UNTITLED = [&U] (((4,(2,(9,(5,(7,(8,6)))))),3),1,10);
	TREE * UNTITLED = [&U] ((3,(4,((9,(5,(7,(8,6)))),2))),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(((6,7),8),5))))),1,10);
	TREE * UNTITLED = [&U] (1,(2,((4,3),(9,(5,((7,6),8))))),10);
	TREE * UNTITLED = [&U] ((3,((((((8,7),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (((4,(2,3)),(9,((6,(8,7)),5))),1,10);
	TREE * UNTITLED = [&U] (1,(3,(((((6,(8,7)),5),9),4),2)),10);
	TREE * UNTITLED = [&U] (1,(((4,3),2),((5,((7,8),6)),9)),10);
	TREE * UNTITLED = [&U] (1,(((2,3),4),(9,((6,(8,7)),5))),10);
	TREE * UNTITLED = [&U] ((3,(2,(4,(9,(5,(6,(8,7))))))),1,10);
	TREE * UNTITLED = [&U] (1,((4,(3,2)),((5,((8,7),6)),9)),10);
	TREE * UNTITLED = [&U] ((2,((9,((6,(7,8)),5)),(4,3))),1,10);
	TREE * UNTITLED = [&U] (1,(((4,(9,(((6,7),8),5))),2),3),10);
	TREE * UNTITLED = [&U] (1,(((4,3),2),(9,((6,(8,7)),5))),10);
	TREE * UNTITLED = [&U] (((3,4),(((((8,6),7),5),9),2)),1,10);
	TREE * UNTITLED = [&U] (1,((2,(4,3)),((5,((8,7),6)),9)),10);
	TREE * UNTITLED = [&U] ((3,((((((7,8),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] (1,(((4,3),(9,(5,(6,(8,7))))),2),10);
	TREE * UNTITLED = [&U] (((4,3),(2,(9,(((8,7),6),5)))),1,10);
	TREE * UNTITLED = [&U] (((((8,(6,7)),5),9),(2,(4,3))),1,10);
	TREE * UNTITLED = [&U] (1,((((9,(5,(6,(7,8)))),2),4),3),10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,((6,(7,8)),5))),1,10);
	TREE * UNTITLED = [&U] (((2,(9,(5,(6,(7,8))))),(3,4)),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),(9,(5,(6,(8,7))))),1,10);
	TREE * UNTITLED = [&U] ((((3,4),2),(((8,(7,6)),5),9)),1,10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,(5,(8,(7,6))))))),1,10);
	TREE * UNTITLED = [&U] ((3,((((((7,8),6),5),9),2),4)),1,10);
	TREE * UNTITLED = [&U] ((4,((2,3),(9,(((8,7),6),5)))),1,10);
	TREE * UNTITLED = [&U] (1,((((5,((8,7),6)),9),2),(3,4)),10);
	TREE * UNTITLED = [&U] ((3,(4,(2,(9,((6,(8,7)),5))))),1,10);
	TREE * UNTITLED = [&U] (((4,3),(2,((((8,7),6),5),9))),1,10);
	TREE * UNTITLED = [&U] ((((9,(5,(6,(8,7)))),2),(3,4)),1,10);
	TREE * UNTITLED = [&U] (1,((4,((9,((7,(6,8)),5)),2)),3),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((((8,7),6),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,((9,(((7,8),6),5)),((3,4),2)),10);
	TREE * UNTITLED = [&U] (((9,((6,(8,7)),5)),(4,(3,2))),1,10);
	TREE * UNTITLED = [&U] (1,((2,((5,(6,(8,7))),9)),(3,4)),10);
	TREE * UNTITLED = [&U] (((9,(5,(8,(6,7)))),((4,3),2)),1,10);
	TREE * UNTITLED = [&U] (((((((6,(7,8)),5),9),2),4),3),1,10);
	TREE * UNTITLED = [&U] (((3,4),(2,(((6,(8,7)),5),9))),1,10);
	TREE * UNTITLED = [&U] ((3,((2,((5,(8,(6,7))),9)),4)),1,10);
	TREE * UNTITLED = [&U] (1,((((9,(((8,6),7),5)),4),2),3),10);
	TREE * UNTITLED = [&U] ((3,((4,((((7,8),6),5),9)),2)),1,10);
	TREE * UNTITLED = [&U] (((9,((6,(7,8)),5)),((4,3),2)),1,10);
	TREE * UNTITLED = [&U] (1,(3,(4,((9,(5,(8,(6,7)))),2))),10);
	TREE * UNTITLED = [&U] (1,(3,(4,(((((8,6),7),5),9),2))),10);
	TREE * UNTITLED = [&U] (1,((((3,4),2),(((8,7),6),5)),9),10);
	TREE * UNTITLED = [&U] (1,((2,((5,(7,(8,6))),9)),(3,4)),10);
	TREE * UNTITLED = [&U] (1,(((6,(7,8)),5),(9,(2,(4,3)))),10);
	TREE * UNTITLED = [&U] (1,(((9,((6,(7,8)),5)),2),(4,3)),10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(8,7)))),((3,4),2)),10);
	TREE * UNTITLED = [&U] (1,((3,4),(2,(((8,(6,7)),5),9))),10);
	TREE * UNTITLED = [&U] (1,((9,(5,(6,(7,8)))),(2,(3,4))),10);
	TREE * UNTITLED = [&U] (1,(9,(((3,4),2),(5,(8,(6,7))))),10);
	TREE * UNTITLED = [&U] (((2,(4,3)),(9,(5,(6,(7,8))))),1,10);
	TREE * UNTITLED = [&U] ((((2,3),4),(9,(5,(7,(8,6))))),1,10);
	TREE * UNTITLED = [&U] (1,((2,(3,4)),((((7,8),6),5),9)),10);
	TREE * UNTITLED = [&U] (((2,(4,((5,(7,(6,8))),9))),3),1,10);
	TREE * UNTITLED = [&U] (((2,(3,4)),((5,(6,(7,8))),9)),1,10);
	TREE * UNTITLED = [&U] ((9,((2,(3,4)),(5,(6,(7,8))))),1,10);
	TREE * UNTITLED = [&U] (1,((4,3),((9,((6,(7,8)),5)),2)),10);
	TREE * UNTITLED = [&U] (1,(3,((2,(9,(5,(6,(7,8))))),4)),10);
END;
